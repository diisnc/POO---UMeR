#BlueJ class context
comment0.params=
comment0.target=TUI()
comment1.params=
comment1.target=TUI\ newTUI()
comment10.params=
comment10.target=void\ nope()
comment11.params=max
comment11.target=int\ askOpcao(int)
comment12.params=opcoes
comment12.target=void\ showMenu(java.lang.String[])
comment13.params=opcoes
comment13.target=int\ menu(java.lang.String[])
comment14.params=title\ opcoes
comment14.target=int\ menu(java.lang.String,\ java.lang.String[])
comment15.params=opcoes\ exitText
comment15.target=int\ menu(java.lang.String[],\ java.lang.String)
comment16.params=title\ opcoes\ exitText
comment16.target=int\ menu(java.lang.String,\ java.lang.String[],\ java.lang.String)
comment17.params=text
comment17.target=java.lang.String\ askString(java.lang.String)
comment18.params=text
comment18.target=double\ askDouble(java.lang.String)
comment19.params=text
comment19.target=int\ askInt(java.lang.String)
comment2.params=
comment2.target=void\ clearScreen()
comment20.params=text
comment20.target=boolean\ askBool(java.lang.String)
comment21.params=
comment21.target=java.lang.String\ askEmail()
comment22.params=
comment22.target=java.lang.String\ askNewEmail()
comment23.params=
comment23.target=java.lang.String\ askData()
comment24.params=
comment24.target=void\ menuViagem()
comment25.params=
comment25.target=java.lang.String\ askNewMatricula()
comment26.params=
comment26.target=java.lang.String\ askMatricula()
comment27.params=
comment27.target=void\ menu1()
comment28.params=
comment28.target=void\ associa()
comment29.params=
comment29.target=int\ login()
comment3.params=minutos
comment3.target=void\ mais_minutos(long)
comment3.text=\ Metodo\ que\ avan\u00E7a\ n\ minutos\ \u00E0\ nossa\ variavel\ de\ tempo\r\n\ Para\ compara\u00E7\u00E3o\ entre\ as\ datas\ temos\r\n\ isAfter(ChronoLocalDateTime<?>\ other)\r\n\ Checks\ if\ this\ date-time\ is\ after\ the\ specified\ date-time.\r\n\ isBefore(ChronoLocalDateTime<?>\ other)\r\n\ Checks\ if\ this\ date-time\ is\ before\ the\ specified\ date-time.\r\n\ until(Temporal\ endExclusive,\ TemporalUnit\ unit)\r\n\ Calculates\ the\ amount\ of\ time\ until\ another\ date-time\ in\ terms\ of\ the\ specified\ unit.\r\n
comment30.params=
comment30.target=void\ addNewUser()
comment31.params=
comment31.target=java.lang.String\ addNewVeiculo()
comment32.params=
comment32.target=java.lang.String\ addNewCliente()
comment33.params=
comment33.target=java.lang.String\ addNewMotorista()
comment34.params=
comment34.target=java.lang.String\ askEmpresa()
comment35.params=
comment35.target=void\ addEmpresa()
comment36.params=
comment36.target=java.lang.String[]\ getNomesEmpresas()
comment37.params=
comment37.target=boolean\ loadEmpresa()
comment38.params=
comment38.target=void\ menuEmpresa()
comment39.params=s
comment39.target=boolean\ load(java.lang.String)
comment4.params=
comment4.target=void\ sleep()
comment40.params=
comment40.target=void\ main()
comment40.text=public\ void\ guardaEstado(String\ nomeFicheiro)\r\n\ \ \ \ \ \ \ \ throws\ FileNotFoundException,IOException\ {\r\n\ \ \ \ \ \ \ \ FileOutputStream\ fos\ \=\ new\ FileOutputStream(nomeFicheiro);\r\n\ \ \ \ \ \ \ \ ObjectOutputStream\ oos\ \=\ new\ ObjectOutputStream(fos);\r\n\ \ \ \ \ \ \ \ oos.writeObject(this);\ \r\n\ \ \ \ \ \ \ \ oos.flush();\r\n\ \ \ \ \ \ \ \ oos.close();\r\n\ \ \ \ }\r\n\ \ \ public\ TUI\ carregaEstado(String\ nomeFicheiro)\r\n\ \ \ \ \ \ \ \ throws\ FileNotFoundException,IOException,ClassNotFoundException\ {\r\n\ \ \ \ \ \ \ \ FileInputStream\ fis\ \=\ new\ FileInputStream(nomeFicheiro);\r\n\ \ \ \ \ \ \ \ ObjectInputStream\ ois\ \=\ new\ ObjectInputStream(fis);\r\n\ \ \ \ \ \ \ \ TUI\ e\ \=\ (TUI)\ ois.readObject();\r\n\ \ \ \ \ \ \ \ ois.close();\r\n\ \ \ \ \ \ \ \ return\ e;\r\n}
comment5.params=t
comment5.target=void\ sleep(int)
comment6.params=
comment6.target=void\ invalido()
comment6.text=\r\n\ \ \ \r\n\ \ \ private\ \ int\ menuORIGINAL(String\ text,\ int\ max){\r\n\ \ \ \ \ \ \ String\ inp;\r\n\ \ \ \ \ \ \ int\ res;\r\n\ \ \ \ \ \ \ Scanner\ ler\ \=\ new\ Scanner(System.in);\r\n\ \ \ \ \ \ \ clearScreen();\r\n\ \ \ \ \ \ \ System.out.print(text);\r\n\ \ \ \ \ \ \ inp\=ler.next();\r\n\ \ \ \ \ \ \ try{\r\n\ \ \ \ \ \ \ \ \ \ \ res\ \=\ Integer.parseInt(inp);\r\n\ \ \ \ \ \ \ \ \ \ \ if(res>max\ ||\ res<0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ invalido();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ler.close();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ res\ \=\ menuORIGINAL(text,max);\r\n\ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ catch(Throwable\ e){\r\n\ \ \ \ \ \ \ \ \ \ \ invalido();\r\n\ \ \ \ \ \ \ \ \ \ \ ler.close();\r\n\ \ \ \ \ \ \ \ \ \ \ res\ \=\ menuORIGINAL(text,max);\r\n\ \ \ \ \ \ \ };\r\n\ \ \ \ \ \ \ ler.close();\r\n\ \ \ \ \ \ \ return\ res;\r\n\ \ \ }\ \ \ \r\n\ \ \ \r\n\ \ \ \ \r\n
comment7.params=text
comment7.target=void\ invalido(java.lang.String)
comment8.params=
comment8.target=void\ dots()
comment9.params=
comment9.target=void\ fechar()
numComments=41
